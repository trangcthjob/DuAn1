// <auto-generated />
using System;
using DAT_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAT_Context.Migrations
{
    [DbContext(typeof(DAT_DbContext))]
    partial class DAT_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChuyenNganhMonHoc", b =>
                {
                    b.Property<Guid>("ChuyenNganhsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MonHocsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ChuyenNganhsId", "MonHocsId");

                    b.HasIndex("MonHocsId");

                    b.ToTable("ChuyenNganhMonHoc");
                });

            modelBuilder.Entity("Domain.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Domain.Models.Giangvien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenCa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianBatDau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianKetThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cas");
                });

            modelBuilder.Entity("Domain.Models.ChuyenNganh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChuyenNganhChaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaChuyenNganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuyenNganh")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenNganhChaId");

                    b.ToTable("ChuyenNganhs");
                });

            modelBuilder.Entity("Domain.Models.DiemDanh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LichHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SinhVienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ThoiGian")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LichHocId");

                    b.ToTable("DiemDanhs");
                });

            modelBuilder.Entity("Domain.Models.Giangvien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChuyenNganhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaGiangVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGiangVien")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenNganhId");

                    b.ToTable("Cas");
                });

            modelBuilder.Entity("Domain.Models.KiHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayBatDau")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenKiHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KiHocs");
                });

            modelBuilder.Entity("Domain.Models.LichHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GiangVienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LaLichThi")
                        .HasColumnType("bit");

                    b.Property<Guid>("LopHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MonHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayHoc")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaID");

                    b.HasIndex("GiangVienId");

                    b.HasIndex("LopHocId");

                    b.HasIndex("MonHocId");

                    b.ToTable("LichHocs");
                });

            modelBuilder.Entity("Domain.Models.Lop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChuyenNganhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenNganhId");

                    b.ToTable("Lops");
                });

            modelBuilder.Entity("Domain.Models.MonHoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("Domain.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Models.SinhVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChuyenNganhId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaSinhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenNganhId");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("KiHocLop", b =>
                {
                    b.Property<Guid>("KiHocsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LopsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KiHocsId", "LopsId");

                    b.HasIndex("LopsId");

                    b.ToTable("KiHocLop");
                });

            modelBuilder.Entity("ChuyenNganhMonHoc", b =>
                {
                    b.HasOne("Domain.Models.ChuyenNganh", null)
                        .WithMany()
                        .HasForeignKey("ChuyenNganhsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.MonHoc", null)
                        .WithMany()
                        .HasForeignKey("MonHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Account", b =>
                {
                    b.HasOne("Domain.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Domain.Models.ChuyenNganh", b =>
                {
                    b.HasOne("Domain.Models.ChuyenNganh", "ChuyenNganhCha")
                        .WithMany()
                        .HasForeignKey("ChuyenNganhChaId");

                    b.Navigation("ChuyenNganhCha");
                });

            modelBuilder.Entity("Domain.Models.DiemDanh", b =>
                {
                    b.HasOne("Domain.Models.LichHoc", "LichHoc")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("LichHocId");

                    b.Navigation("LichHoc");
                });

            modelBuilder.Entity("Domain.Models.Giangvien", b =>
                {
                    b.HasOne("Domain.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany()
                        .HasForeignKey("ChuyenNganhId");

                    b.Navigation("ChuyenNganh");
                });

            modelBuilder.Entity("Domain.Models.LichHoc", b =>
                {
                    b.HasOne("Domain.Models.Giangvien", "Giangvien")
                        .WithMany("LichHocs")
                        .HasForeignKey("CaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Giangvien", "Giangvien")
                        .WithMany()
                        .HasForeignKey("GiangVienId");

                    b.HasOne("Domain.Models.Lop", "LopHoc")
                        .WithMany()
                        .HasForeignKey("LopHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MonHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Giangvien");

                    b.Navigation("Giangvien");

                    b.Navigation("LopHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Domain.Models.Lop", b =>
                {
                    b.HasOne("Domain.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany()
                        .HasForeignKey("ChuyenNganhId");

                    b.Navigation("ChuyenNganh");
                });

            modelBuilder.Entity("Domain.Models.SinhVien", b =>
                {
                    b.HasOne("Domain.Models.ChuyenNganh", "ChuyenNganh")
                        .WithMany("SinhViens")
                        .HasForeignKey("ChuyenNganhId");

                    b.Navigation("ChuyenNganh");
                });

            modelBuilder.Entity("KiHocLop", b =>
                {
                    b.HasOne("Domain.Models.KiHoc", null)
                        .WithMany()
                        .HasForeignKey("KiHocsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Lop", null)
                        .WithMany()
                        .HasForeignKey("LopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.Giangvien", b =>
                {
                    b.Navigation("LichHocs");
                });

            modelBuilder.Entity("Domain.Models.ChuyenNganh", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("Domain.Models.LichHoc", b =>
                {
                    b.Navigation("DiemDanhs");
                });
#pragma warning restore 612, 618
        }
    }
}
